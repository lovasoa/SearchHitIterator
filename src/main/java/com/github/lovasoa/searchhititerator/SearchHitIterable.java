package com.github.lovasoa.searchhititerator;

import org.elasticsearch.action.search.SearchRequestBuilder;
import org.elasticsearch.client.Client;
import org.elasticsearch.common.unit.TimeValue;
import org.elasticsearch.search.SearchHit;

import java.util.Iterator;

public class SearchHitIterable implements Iterable<SearchHit> {
    private Client client;
    private SearchRequestBuilder builder;
    private TimeValue scrollTimeout;

    /**
     * Creates an iterable object over the results of the query generated by the builder.
     * The query is executed when the `iterator()` method is called (when iteration starts).
     *
     * @param client        the client from which the builder was created
     * @param builder       a search action request builder
     * @param scrollTimeout controls how long to keep the scrolling resources open
     */
    public SearchHitIterable(Client client, SearchRequestBuilder builder, TimeValue scrollTimeout) {
        this.client = client;
        this.builder = builder;
        this.scrollTimeout = scrollTimeout;
    }

    public SearchHitIterable(Client client, SearchRequestBuilder builder) {
        this(client, builder, new TimeValue(60000));
    }

    public Iterator<SearchHit> iterator() {
        return new SearchHitIterator(client, builder, scrollTimeout);
    }
}
